{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/react/firstapp/src/index.js\";\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'; //import Counters from './components/counters';\n//import App from './components/hooks';\n\n/* class Clock extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: new Date()\n        }\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    tick() {\n        this.setState({\n            date: new Date()\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>It is time {this.state.date.toLocaleTimeString()}</h2>\n            </div>\n        );\n    }\n}\n */\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleON: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(state => ({\n      isToggleON: !state.isToggleOn\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, this.state.isToggleON ? 'ON' : 'OFF');\n  }\n\n}\n\nReactDom.render( /*#__PURE__*/React.createElement(Toggle, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 17\n  }\n}), document.getElementById('root')); //ReactDom.render(<App/>, document.getElementById('root'));","map":{"version":3,"sources":["/Users/user/Desktop/react/firstapp/src/index.js"],"names":["React","ReactDom","Toggle","Component","constructor","props","state","isToggleON","handleClick","bind","setState","isToggleOn","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,kCAAP,C,CAEA;AAEA;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,WAAW,GAAG;AACV,SAAKE,QAAL,CAAcJ,KAAK,KAAK;AACpBC,MAAAA,UAAU,EAAE,CAACD,KAAK,CAACK;AADC,KAAL,CAAnB;AAGH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAQ,MAAA,OAAO,EAAE,KAAKJ,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B,KADpC,CADJ;AAKH;;AAnBgC;;AAwBrCN,QAAQ,CAACW,MAAT,eAAgB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA2BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA3B,E,CAKA","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\n//import Counters from './components/counters';\n\n//import App from './components/hooks';\n\n\n\n/* class Clock extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: new Date()\n        }\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    tick() {\n        this.setState({\n            date: new Date()\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>It is time {this.state.date.toLocaleTimeString()}</h2>\n            </div>\n        );\n    }\n}\n */\n\n\nclass Toggle extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {isToggleON: true};\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.setState(state => ({\n            isToggleON: !state.isToggleOn\n        }));\n    }\n\n    render(){\n        return(\n            <button onClick={this.handleClick}>\n                {this.state.isToggleON ? 'ON' : 'OFF'}\n            </button>\n        );\n    }\n}\n\n\n\nReactDom.render(<Toggle/>, document.getElementById('root'));\n\n\n\n\n//ReactDom.render(<App/>, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}